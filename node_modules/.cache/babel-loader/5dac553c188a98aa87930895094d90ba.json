{"ast":null,"code":"import wordBank from \"./wordle-bank.txt\";\nexport const boardDefault = [[\"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\"]];\nexport const generateWordSet = async () => {\n  let wordSet;\n  let todaysWord;\n  await fetch(wordBank).then(response => response.text()).then(result => {\n    const wordArr = result.split(\"\\n\");\n    todaysWord = \"dhaani\";\n    wordSet = new Set(wordArr);\n    console.log(todaysWord);\n  });\n  return {\n    wordSet,\n    todaysWord\n  };\n};","map":{"version":3,"sources":["/Users/pranavpipariya/Downloads/Wordle-Clone-React-main/src/Words.js"],"names":["wordBank","boardDefault","generateWordSet","wordSet","todaysWord","fetch","then","response","text","result","wordArr","split","Set","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAC1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAoB,EAApB,CAD0B,EAE1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAoB,EAApB,CAF0B,EAG1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAoB,EAApB,CAH0B,EAI1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAoB,EAApB,CAJ0B,EAK1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAoB,EAApB,CAL0B,EAM1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAoB,EAApB,CAN0B,CAArB;AASP,OAAO,MAAMC,eAAe,GAAG,YAAY;AACzC,MAAIC,OAAJ;AACA,MAAIC,UAAJ;AACA,QAAMC,KAAK,CAACL,QAAD,CAAL,CACHM,IADG,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHF,IAFG,CAEGG,MAAD,IAAY;AAChB,UAAMC,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAa,IAAb,CAAhB;AACAP,IAAAA,UAAU,GAAC,QAAX;AACAD,IAAAA,OAAO,GAAG,IAAIS,GAAJ,CAAQF,OAAR,CAAV;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACD,GAPG,CAAN;AAQA,SAAO;AAAED,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD,CAZM","sourcesContent":["import wordBank from \"./wordle-bank.txt\";\n\nexport const boardDefault = [\n  [\"\", \"\", \"\", \"\", \"\",\"\"],\n  [\"\", \"\", \"\", \"\", \"\",\"\"],\n  [\"\", \"\", \"\", \"\", \"\",\"\"],\n  [\"\", \"\", \"\", \"\", \"\",\"\"],\n  [\"\", \"\", \"\", \"\", \"\",\"\"],\n  [\"\", \"\", \"\", \"\", \"\",\"\"],\n];\n\nexport const generateWordSet = async () => {\n  let wordSet;\n  let todaysWord;\n  await fetch(wordBank)\n    .then((response) => response.text())\n    .then((result) => {\n      const wordArr = result.split(\"\\n\");\n      todaysWord=\"dhaani\";\n      wordSet = new Set(wordArr);\n      console.log(todaysWord);\n    });\n  return { wordSet, todaysWord };\n};\n"]},"metadata":{},"sourceType":"module"}